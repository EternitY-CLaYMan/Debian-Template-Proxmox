debconf debconf/language string fr
d-i     debconf/language string fr
d-i     debian-installer/language string fr

d-i     debian-installer/locale string fr_FR.UTF-8
d-i     debian-installer/splash boolean false
d-i     debian-installer/language string fr
d-i     debian-installer/country string FR

d-i     console-setup/ask_detect        boolean false
d-i     console-setup/layoutcode        string fr
d-i     keyboard-configuration/xkb-keymap select fr
d-i     keyboard-configuration/layoutcode string fr

d-i preseed/early_command string anna-install parted-udeb cryptsetup-udeb crypto-dm-modules lvm2-udeb mdadm-udeb md-modules

#d-i anna/choose_modules string network-console
#d-i preseed/early_command string anna-install network-console
#d-i network-console/password password root
#d-i network-console/password-again password root

d-i     mirror/country string manual
#d-i     mirror/http/hostname string ftp-stud.hs-esslingen.de
d-i	mirror/http/hostname string deb.debian.org
d-i     mirror/http/directory string /debian
d-i     mirror/http/proxy string

d-i     netcfg/get_hostname string {{ vm_name }}
d-i     netcfg/get_domain string forky.ovh

### Apt setup
# You can choose to install non-free and contrib software.
d-i     apt-setup/non-free boolean true
d-i     apt-setup/contrib boolean true
d-i     apt-setup/use_mirror boolean true

# ------------
d-i     partman-auto/disk string /dev/{{ prefix_disk }}a
d-i     partman-auto/method string lvm
d-i     partman-lvm/device_remove_lvm boolean true
d-i     partman-lvm/device_remove_lvm_span boolean true
d-i     partman-auto/purge_lvm_from_device  boolean true
d-i     partman-auto-lvm/new_vg_name string vg00
d-i     partman-auto/choose_recipe select boot-root


#d-i partman-auto-lvm/guided_size string max
#d-i     partman-md/device_remove_md boolean true
#d-i     partman-lvm/confirm boolean true

#d-i partman/alignment string optimal
#d-i partman/confirm_nooverwrite boolean true
#d-i partman-auto/method string lvm
#d-i partman-lvm/device_remove_lvm boolean true
#d-i partman-lvm/confirm boolean true
#d-i partman-lvm/confirm_nooverwrite boolean true
#d-i partman-auto-lvm/no_boot boolean true
#d-i partman-basicfilesystems/no_swap boolean false

##-----

#wget http://192.168.1.243/hack.sh -O /lib/partman/finish.d/01cleanup;\

d-i partman/early_command string \
wget http://$packer_host:$packer_port/hack.sh -O /lib/partman/finish.d/01cleanup;\
chmod +x /lib/partman/finish.d/01cleanup

d-i partman-auto/expert_recipe string \
   boot-root ::                       \
      512 512 512 ext4                \
         $primary{ }                  \
         $bootable{ }                 \
         method{ format }             \
         format{ }                    \
         use_filesystem{ }            \
         filesystem{ ext4 }           \
         label{ boot }                \
         mountpoint{ /boot }          \
         .                            \
      1000 35 8000 ext4         \
         $lvmignore{ }                \
         $primary{ } method{ lvm }    \
         .                            \
      1000 6000 6000 ext4          \
         $defaultignore{ }            \
         $lvmok{ } lv_name { root }   \
         method{ format } format{ }   \
         use_filesystem{ }            \
         filesystem{ ext4 }           \
         mountpoint{ / }              \
         .                            \
      512 512 512 linux-swap    \
         $defaultignore{ }            \
         $lvmok{ } lv_name { swap }   \
         method{ swap } format{ }     \
         .

d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition select Finish partitioning and write changes to disk
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

#d-i     mdadm/boot_degraded boolean false
#d-i     partman-md/confirm boolean true
#d-i     partman-partitioning/confirm_write_new_label boolean true
#d-i     partman/choose_partition select Finish partitioning and write changes to disk
#d-i     partman/confirm boolean true
#d-i     partman-md/confirm_nooverwrite  boolean true
#d-i     partman/confirm_nooverwrite boolean true


#------------


#d-i     partman-lvm/device_remove_lvm boolean true
#d-i     partman-md/device_remove_md boolean true
#d-i     partman-lvm/confirm boolean true
#d-i     partman-auto/choose_recipe select atomic

#d-i     mdadm/boot_degraded boolean false
#d-i     partman-md/confirm boolean true
#d-i     partman-partitioning/confirm_write_new_label boolean true
#d-i     partman/choose_partition select Finish partitioning and write changes to disk
#d-i     partman/confirm boolean true
#d-i     partman-md/confirm_nooverwrite  boolean true
#d-i     partman/confirm_nooverwrite boolean true
#d-i     partman-lvm/confirm boolean true
#d-i     partman-lvm/confirm_nooverwrite boolean true

# fstab utilisera des UUID plutôt que des noms de périphériques
d-i     partman/mount_style select uuid

d-i     clock-setup/utc boolean true
d-i     clock-setup/ntp boolean true
d-i     clock-setup/ntp-server  string ntp.ubuntu.com
d-i     time/zone string Europe/Paris

#d-i     base-installer/kernel/image     string linux-server

# users
d-i passwd/root-login       boolean true
d-i passwd/root-password password {{ ssh_password }}
d-i passwd/root-password-again password {{ ssh_password }}
d-i passwd/make-user boolean true

# To create a normal user account.
d-i passwd/user-fullname string ansible deploy
d-i passwd/username string deploy
# Normal user's password, either in clear text
d-i passwd/user-password password {{ userdeploy_password }}
d-i passwd/user-password-again password {{ userdeploy_password }}
# or encrypted using a crypt(3) hash.
#d-i passwd/user-password-crypted password [crypt(3) hash]
# Create the first user with the specified UID instead of the default.
#d-i passwd/user-uid string 1010

d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean false
d-i grub-installer/choose_bootdev string /dev/{{ prefix_disk }}a

# fstab utilisera des UUID plutôt que des noms de périphériques
d-i	partman/mount_style select uuid

d-i     clock-setup/utc boolean true
d-i     clock-setup/ntp boolean true
d-i     clock-setup/ntp-server  string ntp.ubuntu.com
d-i     time/zone string Europe/Paris

#d-i     base-installer/kernel/image     string linux-server

d-i     pkgsel/upgrade  select safe-upgrade
d-i     pkgsel/language-packs   multiselect 
d-i     pkgsel/update-policy    select none
d-i     pkgsel/updatedb boolean true
tasksel tasksel/first multiselect standard, openssh-server

d-i grub-installer/only_debian boolean true
# Optional password for grub, either in clear text
#d-i grub-installer/password password r00tme
#d-i grub-installer/password-again password r00tme
# or encrypted using an MD5 hash, see grub-md5-crypt(8).
#d-i grub-installer/password-crypted password [MD5 hash]

d-i     finish-install/keep-consoles    boolean true
d-i     finish-install/reboot_in_progress       note 
d-i     cdrom-detect/eject      boolean true
d-i     debian-installer/exit/halt      boolean false
d-i     debian-installer/exit/poweroff  boolean false
d-i	debian-installer/add-kernel-opts string net.ifnames=0 biosdevname=0 
d-i     pkgsel/include string vim openssh-server sudo htop iotop rsync mc curl python3 python3-pip python3-apt dnsutils net-tools net-tools gnupg2 wget hostname ansible qemu-guest-agent parted

d-i preseed/late_command string \
        in-target /bin/sh -c "sed -i -e 's/'$(grep iface /etc/network/interfaces | grep -v lo | cut -d' ' -f2)'/eth0/g' /etc/network/interfaces"; \
	in-target sed -i '/^#PermitRootLogin/c\PermitRootLogin yes' /etc/ssh/sshd_config; \

	in-target mkdir -p /home/deploy/.ssh; \
	in-target /bin/sh -c "echo '{{ vm_keys }}' > /home/deploy/.ssh/authorized_keys"; \
	in-target chown -R deploy:deploy /home/deploy/; \
	in-target chmod -R go-rwx /home/deploy/.ssh/authorized_keys; \

	echo 'deploy ALL=(ALL) NOPASSWD: ALL' > /target/etc/sudoers.d/deploy ; \
	in-target chmod 440 /etc/sudoers.d/deploy ; \

        in-target mkdir -p /root/.ssh; \
        in-target /bin/sh -c "echo '{{ vm_keys }}' > /root/.ssh/authorized_keys"; \
        in-target chmod -R go-rwx /root/.ssh/authorized_keys; \

	in-target sed -i 's/# alias ll/alias ll/g' /root/.bashrc; \
        in-target sed -i 's/# alias ls/alias ls/g' /root/.bashrc; \
        in-target sed -i 's/# alias l/alias l/g' /root/.bashrc; \
        in-target sed -i 's/# export LS_OPTIONS/export LS_OPTIONS/g' /root/.bashrc; \
        in-target sed -i 's/# eval/eval/g' /root/.bashrc;

